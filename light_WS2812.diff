diff -urpw light_WS2812/WS2812.cpp light_WS2812/WS2812.cpp
--- light_WS2812/WS2812.cpp	2016-05-26 23:30:01.151115133 +0200
+++ light_WS2812/WS2812.cpp	2016-06-14 12:19:01.817624601 +0200
@@ -19,6 +19,30 @@ WS2812::WS2812(uint16_t num_leds) {
 	count_led = num_leds;
 	
 	pixels = (uint8_t*)malloc(count_led*3);
+	pixelptr = &pixels;
+	#ifdef RGB_ORDER_ON_RUNTIME	
+		offsetGreen = 0;
+		offsetRed = 1;
+		offsetBlue = 2;
+	#endif
+}
+
+WS2812::WS2812(uint16_t num_leds, cRGB *buffer) {
+	count_led = num_leds;
+	
+	pixels = (uint8_t*)buffer;
+	pixelptr = &pixels;
+	#ifdef RGB_ORDER_ON_RUNTIME	
+		offsetGreen = 0;
+		offsetRed = 1;
+		offsetBlue = 2;
+	#endif
+}
+
+WS2812::WS2812(uint16_t num_leds, cRGB **bufptr) {
+	count_led = num_leds;
+	
+	pixelptr = (uint8_t **)bufptr;
 	#ifdef RGB_ORDER_ON_RUNTIME	
 		offsetGreen = 0;
 		offsetRed = 1;
@@ -35,9 +59,9 @@ cRGB WS2812::get_crgb_at(uint16_t index)
 		uint16_t tmp;
 		tmp = index * 3;
 
-		px_value.r = pixels[OFFSET_R(tmp)];
-		px_value.g = pixels[OFFSET_G(tmp)];
-		px_value.b = pixels[OFFSET_B(tmp)];
+		px_value.r = (*pixelptr)[OFFSET_R(tmp)];
+		px_value.g = (*pixelptr)[OFFSET_G(tmp)];
+		px_value.b = (*pixelptr)[OFFSET_B(tmp)];
 	}
 	
 	return px_value;
@@ -50,9 +74,9 @@ uint8_t WS2812::set_crgb_at(uint16_t ind
 		uint16_t tmp;
 		tmp = index * 3;
 		
-		pixels[OFFSET_R(tmp)] = px_value.r;
-		pixels[OFFSET_G(tmp)] = px_value.g;
-		pixels[OFFSET_B(tmp)] = px_value.b;		
+		(*pixelptr)[OFFSET_R(tmp)] = px_value.r;
+		(*pixelptr)[OFFSET_G(tmp)] = px_value.g;
+		(*pixelptr)[OFFSET_B(tmp)] = px_value.b;		
 		return 0;
 	} 
 	return 1;
@@ -63,7 +87,7 @@ uint8_t WS2812::set_subpixel_at(uint16_t
 		uint16_t tmp;
 		tmp = index * 3;
 
-		pixels[tmp + offset] = px_value;
+		(*pixelptr)[tmp + offset] = px_value;
 		return 0;
 	}
 	return 1;
@@ -71,7 +95,7 @@ uint8_t WS2812::set_subpixel_at(uint16_t
 
 void WS2812::sync() {
 	*ws2812_port_reg |= pinMask; // Enable DDR
-	ws2812_sendarray_mask(pixels,3*count_led,pinMask,(uint8_t*) ws2812_port,(uint8_t*) ws2812_port_reg );	
+	ws2812_sendarray_mask((*pixelptr),3*count_led,pinMask,(uint8_t*) ws2812_port,(uint8_t*) ws2812_port_reg );	
 }
 
 #ifdef RGB_ORDER_ON_RUNTIME	
diff -urpw light_WS2812/WS2812.h light_WS2812/WS2812.h
--- light_WS2812/WS2812.h	2016-05-26 23:30:01.151115133 +0200
+++ light_WS2812/WS2812.h	2016-06-14 12:17:23.192495324 +0200
@@ -57,6 +57,8 @@
 class WS2812 {
 public: 
 	WS2812(uint16_t num_led);
+	WS2812(uint16_t num_led, cRGB *buffer);
+	WS2812(uint16_t num_led, cRGB **bufptr);
 	~WS2812();
 	
 	#ifndef ARDUINO
@@ -80,6 +82,7 @@ public:
 private:
 	uint16_t count_led;
 	uint8_t *pixels;
+	uint8_t **pixelptr;
 
 #ifdef RGB_ORDER_ON_RUNTIME	
 	uint8_t offsetRed;
